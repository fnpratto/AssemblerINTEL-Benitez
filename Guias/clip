
comprobarTriangularInferior:

    ; Comprobar si es triangular inferior
    mov ecx, 5           ; n√∫mero de filas
    mov esi, matriz      ; puntero a la matriz
    mov ebx, 0           ; contador de filas

    mov rax,rbx
    imul 4
    mov ebx, rax
    add esi, ebx       ; puntero a la diagonal actual
    mov edx, 0           ; contador de columnas
comprobarFilaInferior:
    cmp edx, ebx
    jge siguienteFilaInferior
    mov eax, [esi + edx*4]
    cmp eax, 0
    jne noEsTriangularInferior
    add edx, 1
    jmp comprobarFilaInferior

noEsTriangularInferior:
    mov byte [esTriangularInf], 0

siguienteFilaInferior:
    ; 20 - (ebx+1)*4
    mov rax, ebx
    inc rax, 1
    imul 4
    mov rdi, 20
    dec rdi, rax

    add esi, rdi
    add ebx, 1
    cmp ebx, 5
    jl comprobarTriangularInferior

    ; Imprimir el resultado
    mov eax, 4           ; syscall number for sys_write
    mov ebx, 1           ; file descriptor 1 (stdout)

    ; Imprimir si es triangular superior
    mov al, [esTriangularSup]
    cmp al, 1
    jne comprobarInferior
    mov ecx, mensajeSup
    mov edx, 30
    int 0x80

comprobarInferior:
    ; Imprimir si es triangular inferior
    mov al, [esTriangularInf]
    cmp al, 1
    jne noTriangular
    mov ecx, mensajeInf
    mov edx, 30
    int 0x80
    jmp fin

noTriangular:
    ; Imprimir que no es triangular
    mov ecx, mensajeNoTriangular
    mov edx, 28
    int 0x80
