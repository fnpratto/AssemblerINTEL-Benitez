                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f40806000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f68803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f77801000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # Ivan Aguirre
                            | # Tomas Losada
                            | #
                            | # Describe how and why you modified the baseline code.
                            | # We implemented loop unrolling and iaddq
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax, %rax		# count = 0;
0x034: c0f2fdffffffffffffff | 	iaddq $-3, %rdx		# rdx = len - 3
0x03e: 711201000000000000   | 	jle RemainingWords	# if len <= 0, goto RemainingWords:
                            | 
0x047:                      | Loop:
0x047: 50370000000000000000 | 	mrmovq (%rdi), %rbx		# read word1 from src
0x051: 50870800000000000000 | 	mrmovq 8(%rdi), %r8		# read word2 from src
0x05b: 50971000000000000000 | 	mrmovq 16(%rdi), %r9	# read word3 from src
0x065: 50a71800000000000000 | 	mrmovq 24(%rdi), %r10	# read word4 from src
0x06f: 40360000000000000000 | 	rmmovq %rbx, (%rsi)		# store word1 to dst
0x079: 40860800000000000000 | 	rmmovq %r8, 8(%rsi)		# store word2 to dst
0x083: 40961000000000000000 | 	rmmovq %r9, 16(%rsi)	# store word3 to dst
0x08d: 40a61800000000000000 | 	rmmovq %r10, 24(%rsi)	# store word4 to dst
0x097: 6233                 | 	andq %rbx, %rbx			# word1 <= 0?
0x099: 71ac00000000000000   | 	jle Npos				# if so, goto Npos:
0x0a2: c0f00100000000000000 | 	iaddq $1, %rax			# count++
                            | 
0x0ac:                      | Npos:
0x0ac: 6288                 | 	andq %r8, %r8		# word2 <= 0?
0x0ae: 71c100000000000000   | 	jle	Npos1			# if so, goto Npos1
0x0b7: c0f00100000000000000 | 	iaddq $1, %rax		# count++
                            | 
0x0c1:                      | Npos1:
0x0c1: 6299                 | 	andq %r9, %r9		# word3 <= 0?
0x0c3: 71d600000000000000   | 	jle	Npos2			# if so, goto Npos2
0x0cc: c0f00100000000000000 | 	iaddq $1, %rax		# count++
                            | 
0x0d6:                      | Npos2:
0x0d6: 62aa                 | 	andq %r10, %r10		# word4 <= 0?
0x0d8: 71eb00000000000000   | 	jle	Npos3			# if so, goto Npos3
0x0e1: c0f00100000000000000 | 	iaddq $1, %rax		# count++
                            | 
0x0eb:                      | Npos3:
0x0eb: c0f72000000000000000 | 	iaddq $32, %rdi		# src++32
0x0f5: c0f62000000000000000 | 	iaddq $32, %rsi		# dst++32
0x0ff: c0f2fcffffffffffffff | 	iaddq $-4, %rdx		# len - 4
0x109: 764700000000000000   | 	jg Loop             # if len > 0 go to Loop:
                            | 
0x112:                      | RemainingWords:
0x112: c0f20300000000000000 | 	iaddq $3, %rdx
                            | 
0x11c:                      | RemainingWordsLoop:
0x11c: 6222                 |     andq %rdx, %rdx     # len <= 0 ?
0x11e: 717701000000000000   |     jle Done            # if so, goto Done
0x127: 50a70000000000000000 |     mrmovq (%rdi), %r10 # read word from src
0x131: 40a60000000000000000 | 	rmmovq %r10, (%rsi) # store word to dst
0x13b: 62aa                 | 	andq %r10, %r10     # word <= 0?
0x13d: 715001000000000000   | 	jle RemainingWordsLoopNpos
0x146: c0f00100000000000000 | 	iaddq $1, %rax		# count++
                            | 
0x150:                      | RemainingWordsLoopNpos:
0x150: c0f2ffffffffffffffff | 	iaddq $-1, %rdx		# len--
0x15a: c0f70800000000000000 | 	iaddq $8, %rdi		# src++
0x164: c0f60800000000000000 | 	iaddq $8, %rsi		# dst++
0x16e: 701c01000000000000   | 	jmp  RemainingWordsLoop
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x177:                      | Done:
0x177: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x178:                      | End:
                            | #/* $end ncopy-ys */EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x178:                      | 	.align 8
0x178:                      | src:
0x178: ffffffffffffffff     | 	.quad -1
0x180: 0200000000000000     | 	.quad 2
0x188: fdffffffffffffff     | 	.quad -3
0x190: 0400000000000000     | 	.quad 4
0x198: fbffffffffffffff     | 	.quad -5
0x1a0: 0600000000000000     | 	.quad 6
0x1a8: f9ffffffffffffff     | 	.quad -7
0x1b0: f8ffffffffffffff     | 	.quad -8
0x1b8: 0900000000000000     | 	.quad 9
0x1c0: f6ffffffffffffff     | 	.quad -10
0x1c8: 0b00000000000000     | 	.quad 11
0x1d0: f4ffffffffffffff     | 	.quad -12
0x1d8: f3ffffffffffffff     | 	.quad -13
0x1e0: f2ffffffffffffff     | 	.quad -14
0x1e8: 0f00000000000000     | 	.quad 15
0x1f0: f0ffffffffffffff     | 	.quad -16
0x1f8: 1100000000000000     | 	.quad 17
0x200: 1200000000000000     | 	.quad 18
0x208: 1300000000000000     | 	.quad 19
0x210: ecffffffffffffff     | 	.quad -20
0x218: 1500000000000000     | 	.quad 21
0x220: 1600000000000000     | 	.quad 22
0x228: e9ffffffffffffff     | 	.quad -23
0x230: e8ffffffffffffff     | 	.quad -24
0x238: e7ffffffffffffff     | 	.quad -25
0x240: 1a00000000000000     | 	.quad 26
0x248: e5ffffffffffffff     | 	.quad -27
0x250: 1c00000000000000     | 	.quad 28
0x258: e3ffffffffffffff     | 	.quad -29
0x260: 1e00000000000000     | 	.quad 30
0x268: 1f00000000000000     | 	.quad 31
0x270: e0ffffffffffffff     | 	.quad -32
0x278: 2100000000000000     | 	.quad 33
0x280: 2200000000000000     | 	.quad 34
0x288: ddffffffffffffff     | 	.quad -35
0x290: 2400000000000000     | 	.quad 36
0x298: dbffffffffffffff     | 	.quad -37
0x2a0: 2600000000000000     | 	.quad 38
0x2a8: 2700000000000000     | 	.quad 39
0x2b0: 2800000000000000     | 	.quad 40
0x2b8: 2900000000000000     | 	.quad 41
0x2c0: 2a00000000000000     | 	.quad 42
0x2c8: d5ffffffffffffff     | 	.quad -43
0x2d0: d4ffffffffffffff     | 	.quad -44
0x2d8: 2d00000000000000     | 	.quad 45
0x2e0: 2e00000000000000     | 	.quad 46
0x2e8: d1ffffffffffffff     | 	.quad -47
0x2f0: 3000000000000000     | 	.quad 48
0x2f8: cfffffffffffffff     | 	.quad -49
0x300: ceffffffffffffff     | 	.quad -50
0x308: 3300000000000000     | 	.quad 51
0x310: 3400000000000000     | 	.quad 52
0x318: 3500000000000000     | 	.quad 53
0x320: caffffffffffffff     | 	.quad -54
0x328: 3700000000000000     | 	.quad 55
0x330: 3800000000000000     | 	.quad 56
0x338: c7ffffffffffffff     | 	.quad -57
0x340: c6ffffffffffffff     | 	.quad -58
0x348: c5ffffffffffffff     | 	.quad -59
0x350: c4ffffffffffffff     | 	.quad -60
0x358: c3ffffffffffffff     | 	.quad -61
0x360: c2ffffffffffffff     | 	.quad -62
0x368: c1ffffffffffffff     | 	.quad -63
0x370: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x380:                      | 	.align 16
0x380:                      | Predest:
0x380: fadebc0000000000     | 	.quad 0xbcdefa
0x388:                      | dest:
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520: abefcd0000000000     | 	.quad 0xcdefab
0x528: abefcd0000000000     | 	.quad 0xcdefab
0x530: abefcd0000000000     | 	.quad 0xcdefab
0x538: abefcd0000000000     | 	.quad 0xcdefab
0x540: abefcd0000000000     | 	.quad 0xcdefab
0x548: abefcd0000000000     | 	.quad 0xcdefab
0x550: abefcd0000000000     | 	.quad 0xcdefab
0x558: abefcd0000000000     | 	.quad 0xcdefab
0x560: abefcd0000000000     | 	.quad 0xcdefab
0x568: abefcd0000000000     | 	.quad 0xcdefab
0x570: abefcd0000000000     | 	.quad 0xcdefab
0x578: abefcd0000000000     | 	.quad 0xcdefab
0x580:                      | Postdest:
0x580: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x588:                      | .align 8
                            | # Run time stack
0x588: 0000000000000000     | 	.quad 0
0x590: 0000000000000000     | 	.quad 0
0x598: 0000000000000000     | 	.quad 0
0x5a0: 0000000000000000     | 	.quad 0
0x5a8: 0000000000000000     | 	.quad 0
0x5b0: 0000000000000000     | 	.quad 0
0x5b8: 0000000000000000     | 	.quad 0
0x5c0: 0000000000000000     | 	.quad 0
0x5c8: 0000000000000000     | 	.quad 0
0x5d0: 0000000000000000     | 	.quad 0
0x5d8: 0000000000000000     | 	.quad 0
0x5e0: 0000000000000000     | 	.quad 0
0x5e8: 0000000000000000     | 	.quad 0
0x5f0: 0000000000000000     | 	.quad 0
0x5f8: 0000000000000000     | 	.quad 0
0x600: 0000000000000000     | 	.quad 0
                            | 
0x608:                      | Stack:
